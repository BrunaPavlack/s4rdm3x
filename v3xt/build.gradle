import org.gradle.internal.os.*

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'v3xt'

sourceCompatibility = 1.8
version '1.0-SNAPSHOT'



repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = true
        }
    }
}




dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    ["gl", "glfw", "core"].each {
        implementation "com.github.kotlin-graphics.imgui:imgui-$it:-SNAPSHOT"
    }
    implementation 'com.github.kotlin-graphics.glm:glm:-SNAPSHOT'
    implementation 'com.github.kotlin-graphics:uno-sdk:-SNAPSHOT'
    implementation 'com.github.kotlin-graphics:gln:-SNAPSHOT'
    implementation 'org.lwjgl:lwjgl-glfw:3.2.3'
    implementation 'org.lwjgl:lwjgl-opengl:3.2.3'

    compile 'org.lwjgl:lwjgl-glfw:3.2.3'
    compile 'org.lwjgl:lwjgl-opengl:3.2.3'
    compile 'org.lwjgl:lwjgl-stb:3.2.3'
    compile 'org.lwjgl:lwjgl-jemalloc:3.2.3'


    // Look up which modules and versions of LWJGL are required and add setup the appropriate natives.
    // we do this for all supported platforms
    configurations.compile.resolvedConfiguration.getResolvedArtifacts().forEach {
        if (it.moduleVersion.id.group == "org.lwjgl") {
            System.out.println("org.lwjgl:${it.moduleVersion.id.name}:${it.moduleVersion.id.version}:natives-X")
            runtime "org.lwjgl:${it.moduleVersion.id.name}:${it.moduleVersion.id.version}:natives-windows"
            runtime "org.lwjgl:${it.moduleVersion.id.name}:${it.moduleVersion.id.version}:natives-linux"
            runtime "org.lwjgl:${it.moduleVersion.id.name}:${it.moduleVersion.id.version}:natives-macos"
        }
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
